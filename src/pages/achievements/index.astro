---
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';
import Footer from '../../components/Footer.astro';
import { achievements } from '../../data/achievements';

const featuredAchievements = achievements.filter(achievement => achievement.featured);
const otherAchievements = achievements.filter(achievement => !achievement.featured);
---

<Layout 
  title="Achievements & Recognition - Portfolio"
  description="Professional achievements, awards, and recognition in cybersecurity and software development."
>
  <Navigation />
  
  <main class="pt-24 pb-20">
    <div class="container mx-auto px-6">
      <div class="max-w-6xl mx-auto">
        <h1 class="text-4xl md:text-5xl font-bold text-center mb-8">
          <span class="gradient-text">Achievements & Recognition</span>
        </h1>
        <p class="text-xl text-dark-300 text-center mb-12 max-w-3xl mx-auto">
          Awards, recognitions, and milestones that highlight my contributions in cybersecurity, software development, and sports.
        </p>

        <!-- Featured Achievements -->
        <div class="mb-16">
          <h2 class="text-3xl font-bold mb-8 text-center">
            <span class="text-warning-400">Featured Achievements</span>
          </h2>
          
          <div class="grid md:grid-cols-2 gap-8">
            {featuredAchievements.map((achievement) => (
              <div class="glass-effect rounded-2xl overflow-hidden hover:scale-[1.02] transition-all duration-300 flex flex-col h-full">
                {achievement.image && (
                  <img 
                    src={achievement.image} 
                    alt={achievement.title}
                    class="w-full h-48 object-cover"
                  />
                )}
                <div class="p-8 flex-1 flex flex-col">
                  <div class="flex items-center justify-between mb-4">
                    <span class={`px-3 py-1 rounded-full text-sm font-medium ${
                      achievement.category === 'award' 
                        ? 'bg-warning-500 text-white' 
                        : achievement.category === 'competition' 
                        ? 'bg-success-500 text-white' 
                        : achievement.category === 'recognition'
                        ? 'bg-primary-500 text-white'
                        : 'bg-accent-500 text-white'
                    }`}>
                      {achievement.category.toUpperCase()}
                    </span>
                    <time class="text-dark-400">
                      {new Date(achievement.date).toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                      })}
                    </time>
                  </div>
                  
                  <h3 class="text-2xl font-bold mb-3">{achievement.title}</h3>
                  {achievement.organization && (
                    <p class="text-primary-400 font-medium mb-3">{achievement.organization}</p>
                  )}
                  <p class="text-dark-300 mb-6 leading-relaxed">
                    {achievement.description}
                  </p>
                  
                  <div class="space-y-2 mb-6">
                    {achievement.details.map((detail) => (
                      <div class="flex items-start space-x-3">
                        <div class="w-2 h-2 bg-success-500 rounded-full mt-2 flex-shrink-0"></div>
                        <span class="text-dark-300 text-sm">{detail}</span>
                      </div>
                    ))}
                  </div>
                  
                  {achievement.link && (
                    <a 
                      href={achievement.link}
                      target="_blank" 
                      rel="noopener noreferrer"
                      class="inline-flex items-center space-x-2 text-primary-400 hover:text-primary-300 font-medium transition-colors"
                    >
                      <span>Learn More</span>
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                      </svg>
                    </a>
                  )}
                </div>
              </div>
            ))}
          </div>
        </div>
        
        <!-- Other Achievements -->
        {otherAchievements.length > 0 && (
          <div>
            <h2 class="text-3xl font-bold mb-8 text-center">
              <span class="text-accent-400">Other Notable Achievements</span>
            </h2>
            
            <div class="grid md:grid-cols-2 gap-8">
              {otherAchievements.map((achievement) => (
                <div class="glass-effect rounded-2xl p-6 hover:scale-105 transition-all duration-300 flex flex-col h-full">
                  {achievement.image && (
                    <img 
                      src={achievement.image} 
                      alt={achievement.title}
                      class="w-full h-40 object-cover mb-4"
                    />
                  )}
                  <div class="flex items-center justify-between mb-4">
                    <span class={`px-3 py-1 rounded-full text-sm font-medium ${
                      achievement.category === 'award' 
                        ? 'bg-warning-500 text-white' 
                        : achievement.category === 'competition' 
                        ? 'bg-success-500 text-white' 
                        : achievement.category === 'recognition'
                        ? 'bg-primary-500 text-white'
                        : 'bg-accent-500 text-white'
                    }`}>
                      {achievement.category.toUpperCase()}
                    </span>
                    <time class="text-dark-400 text-sm">
                      {new Date(achievement.date).toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                      })}
                    </time>
                  </div>
                  
                  <h3 class="text-xl font-bold mb-2">{achievement.title}</h3>
                  {achievement.organization && (
                    <p class="text-primary-400 font-medium mb-3">{achievement.organization}</p>
                  )}
                  <p class="text-dark-300 mb-4 text-sm leading-relaxed">
                    {achievement.description}
                  </p>
                  
                  <div class="space-y-1 mb-4">
                    {achievement.details.slice(0, 3).map((detail) => (
                      <div class="flex items-start space-x-2">
                        <div class="w-1.5 h-1.5 bg-success-500 rounded-full mt-1.5 flex-shrink-0"></div>
                        <span class="text-dark-300 text-xs">{detail}</span>
                      </div>
                    ))}
                    {achievement.details.length > 3 && (
                      <div class="text-dark-400 text-xs ml-4">
                        +{achievement.details.length - 3} more highlights
                      </div>
                    )}
                  </div>
                  
                  {achievement.link && (
                    <a 
                      href={achievement.link}
                      target="_blank" 
                      rel="noopener noreferrer"
                      class="text-primary-400 hover:text-primary-300 font-medium text-sm transition-colors"
                    >
                      Learn More â†’
                    </a>
                  )}
                </div>
              ))}
            </div>
          </div>
        )}
      </div>
    </div>
  </main>
  
  <Footer />
</Layout>